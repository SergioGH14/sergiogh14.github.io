[{"data":1,"prerenderedAt":1343},["ShallowReactive",2],{"$ij35HG41ph":3,"content-query-lHxIibVfwb":758},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"author":10,"date":11,"tags":12,"excerpt":17,"body":50,"_type":752,"_id":753,"_source":754,"_file":755,"_stem":756,"_extension":757},"/blog/mvp-without-db","blog",false,"","Construyendo un MVP sin BBDD","Como afrontar un MVP sin decisiones precipitadas","Sergio Gómez Herrera","2023-07-01T00:00:00.000Z",[13,14,15,16],"kotlin","product","programming","dev",{"type":18,"children":19},"root",[20,28,40,45],{"type":21,"tag":22,"props":23,"children":25},"element","h1",{"id":24},"construyendo-un-mvp-sin-bbdd",[26],{"type":27,"value":8},"text",{"type":21,"tag":29,"props":30,"children":31},"p",{},[32,34],{"type":27,"value":33},"Buenas prácticas de programación, código limpio, bajo acoplamiento... Todos estos conceptos son los primeros que escuchas en la universidad y podríamos englobarlos dentro del concepto ",{"type":21,"tag":35,"props":36,"children":37},"em",{},[38],{"type":27,"value":39},"calidad de código.",{"type":21,"tag":29,"props":41,"children":42},{},[43],{"type":27,"value":44},"Justo después intentas crear un producto de software y te das cuenta de que la calidad del código depende de cómo de fácil se adapte a las diferentes necesidades de un producto que está en constante evolución.",{"type":21,"tag":29,"props":46,"children":47},{},[48],{"type":27,"value":49},"En este post voy a intentar replicar la situación que me ayudó a entender cómo eso se puede aplicar en la vida real.",{"type":18,"children":51,"toc":739},[52,56,64,68,72,78,83,109,118,124,129,138,143,167,172,179,184,192,198,203,211,216,222,232,242,252,260,266,271,279,285,290,295,336,341,346,353,358,363,368,373,378,383,388,393,412,417,422,440,445,462,467,479,488,493,502,511,520,529,538,544,549,558,574,580,585,590,626,631,659,665,670,705,711,716,721,726],{"type":21,"tag":22,"props":53,"children":54},{"id":24},[55],{"type":27,"value":8},{"type":21,"tag":29,"props":57,"children":58},{},[59,60],{"type":27,"value":33},{"type":21,"tag":35,"props":61,"children":62},{},[63],{"type":27,"value":39},{"type":21,"tag":29,"props":65,"children":66},{},[67],{"type":27,"value":44},{"type":21,"tag":29,"props":69,"children":70},{},[71],{"type":27,"value":49},{"type":21,"tag":22,"props":73,"children":75},{"id":74},"mvp-eso-que-es",[76],{"type":27,"value":77},"¿MVP, eso que es?",{"type":21,"tag":29,"props":79,"children":80},{},[81],{"type":27,"value":82},"Un MVP (Minimum Viable Product) es una estrategia centrada en validar las hipótesis de un posible producto lo antes posible y con el menor esfuerzo. Las principales características que debemos cumplir al máximo son:",{"type":21,"tag":84,"props":85,"children":86},"ul",{},[87,99],{"type":21,"tag":88,"props":89,"children":90},"li",{},[91,97],{"type":21,"tag":92,"props":93,"children":94},"strong",{},[95],{"type":27,"value":96},"Rápido",{"type":27,"value":98},": Cuanto antes seamos capaz de llegar al mercado, más datos vamos a poder obtener. Los datos son el motor principal de un MVP. Ellos guiarán el camino a seguir y las decisiones a tomar intentando evitar al máximo los errores y la inversión de recursos en areas que no aporten valor.",{"type":21,"tag":88,"props":100,"children":101},{},[102,107],{"type":21,"tag":92,"props":103,"children":104},{},[105],{"type":27,"value":106},"Barato",{"type":27,"value":108},": El producto tiene que poder desecharse en caso de que no sea exitoso, ello implica que no debe de suponer una inversion de recursos grande. Esta propiedad se tiene que cumplir durante la mayor parte de vida del producto, eso significa que no solo debe de ser barato al inicio, si no que debe de evolucionar sin una inversión grande de recursos.",{"type":21,"tag":29,"props":110,"children":111},{},[112],{"type":21,"tag":113,"props":114,"children":117},"img",{"alt":115,"src":116},"MVP cicle","https://dev-to-uploads.s3.amazonaws.com/uploads/articles/erejlazb86n6df0h89eq.png",[],{"type":21,"tag":22,"props":119,"children":121},{"id":120},"caso-práctico",[122],{"type":27,"value":123},"Caso práctico",{"type":21,"tag":29,"props":125,"children":126},{},[127],{"type":27,"value":128},"Ya basta de introducciones, vayamos con un caso de ejemplo, imaginémonos la siguiente situación:",{"type":21,"tag":130,"props":131,"children":132},"blockquote",{},[133],{"type":21,"tag":29,"props":134,"children":135},{},[136],{"type":27,"value":137},"Tenemos una aplicación bancaria que tiene una cantidad estable de usuarios mensuales. Cómo la marca está muy bien valorada, se plantea la posibilidad de añadir un carrito de compra para comprar merchandising de la marca. Con este pequeño experimento analizaremos cómo de bien puede encajar un pequeño apartado de compras dentro de la aplicación.",{"type":21,"tag":29,"props":139,"children":140},{},[141],{"type":27,"value":142},"Una vez con la definición del MVP vamos a extraer los casos de uso que se tiene que añadir al sistema.",{"type":21,"tag":144,"props":145,"children":146},"ol",{},[147,152,157,162],{"type":21,"tag":88,"props":148,"children":149},{},[150],{"type":27,"value":151},"Ver los productos a vender",{"type":21,"tag":88,"props":153,"children":154},{},[155],{"type":27,"value":156},"Añadir productos a un carrito de compra",{"type":21,"tag":88,"props":158,"children":159},{},[160],{"type":27,"value":161},"Ver un carrito de compra",{"type":21,"tag":88,"props":163,"children":164},{},[165],{"type":27,"value":166},"Pagar el contenido de un carrito de compra",{"type":21,"tag":29,"props":168,"children":169},{},[170],{"type":27,"value":171},"La aplicación que existe actualmente esta construida en SpringBoot con Kotlin, usa SpringDataJPA para persistir su modelo de entidades en una base de datos relacional PostgreSQL.",{"type":21,"tag":173,"props":174,"children":176},"h3",{"id":175},"tablas",[177],{"type":27,"value":178},"Tablas",{"type":21,"tag":29,"props":180,"children":181},{},[182],{"type":27,"value":183},"Ya que el sistema esta basado en una base de datos relacional, vamos a diseñar un modelo de datos sencillos basados en tablas.",{"type":21,"tag":29,"props":185,"children":186},{},[187],{"type":21,"tag":113,"props":188,"children":191},{"alt":189,"src":190},"Modelo de tablas, abstracto","https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z800ez47w28kpgonhemd.png",[],{"type":21,"tag":173,"props":193,"children":195},{"id":194},"clases",[196],{"type":27,"value":197},"Clases",{"type":21,"tag":29,"props":199,"children":200},{},[201],{"type":27,"value":202},"Una vez con el modelo de base de datos generado solo necesitaríamos implementar las entidades de Kotlin con JPA, esto nos ahorraría tener que implementar los CRUD de base de datos.",{"type":21,"tag":29,"props":204,"children":205},{},[206],{"type":21,"tag":113,"props":207,"children":210},{"alt":208,"src":209},"Modelo de clases, abstracto","https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a2mk1q6330pebtp5kv4y.png",[],{"type":21,"tag":29,"props":212,"children":213},{},[214],{"type":27,"value":215},"Ya por último exponemos los endpoints y tendremos nuestro MVP listo para ser validado.",{"type":21,"tag":173,"props":217,"children":219},{"id":218},"resumen",[220],{"type":27,"value":221},"Resumen",{"type":21,"tag":29,"props":223,"children":224},{},[225,230],{"type":21,"tag":92,"props":226,"children":227},{},[228],{"type":27,"value":229},"¿Qué queremos lograr?",{"type":27,"value":231},"\nImplementar el MVP en el backend lo antes posible",{"type":21,"tag":29,"props":233,"children":234},{},[235,240],{"type":21,"tag":92,"props":236,"children":237},{},[238],{"type":27,"value":239},"¿Cómo lo hemos logrado?",{"type":27,"value":241},"\nUsando frameworks como SpringDataJPA para evitar escribir código boilerplate.",{"type":21,"tag":29,"props":243,"children":244},{},[245,250],{"type":21,"tag":92,"props":246,"children":247},{},[248],{"type":27,"value":249},"¿Qué hemos sacrificado?",{"type":27,"value":251},"\nHemos usado las mismas tecnologías que se usan en el sistema actual por lo que parece que no hemos sacrificado nada.",{"type":21,"tag":29,"props":253,"children":254},{},[255],{"type":21,"tag":113,"props":256,"children":259},{"alt":257,"src":258},"Vision general","https://dev-to-uploads.s3.amazonaws.com/uploads/articles/omwq7yhdos7o3n2xe4o7.png",[],{"type":21,"tag":173,"props":261,"children":263},{"id":262},"validando-el-mvp",[264],{"type":27,"value":265},"Validando el MVP",{"type":21,"tag":29,"props":267,"children":268},{},[269],{"type":27,"value":270},"Una vez con nuestra propuesta nos disponemos a validar el MVP. Una vez con los datos obtenidos recibimos esta respuesta:",{"type":21,"tag":130,"props":272,"children":273},{},[274],{"type":21,"tag":29,"props":275,"children":276},{},[277],{"type":27,"value":278},"La nueva característica ha tenido bastante éxito pero hemos detectado muchos usuarios que quieren más variedad de productos, por lo que ahora vamos a mostrar productos que nos ofrece un proveedor externo. Ademas queremos que el equipo de operaciones pueda añadir productos a mano y cambiar sus propiedades al momento para seguir consiguiendo más datos.",{"type":21,"tag":173,"props":280,"children":282},{"id":281},"esto-significa-que-el-mvp-se-ha-validado",[283],{"type":27,"value":284},"¿Esto significa que el MVP se ha validado?",{"type":21,"tag":29,"props":286,"children":287},{},[288],{"type":27,"value":289},"En este tipo de desarrollos lo mas habitual es que el MVP evolucione a lo largo del tiempo hasta poder convertirse en un producto. No existe una etapa en la que después de aprender y validar se construya un nuevo proyecto desde cero. Por lo que la implementación debe evolucionar constantemente.",{"type":21,"tag":29,"props":291,"children":292},{},[293],{"type":27,"value":294},"Analicemos cómo va a impactar estos cambios en la implementación que hemos realizado:",{"type":21,"tag":84,"props":296,"children":297},{},[298,331],{"type":21,"tag":88,"props":299,"children":300},{},[301,303,308,310,315,317,322,324,329],{"type":27,"value":302},"Añadir los productos desde un proveedor externo supone cambiar ",{"type":21,"tag":92,"props":304,"children":305},{},[306],{"type":27,"value":307},"totalmente",{"type":27,"value":309}," el modelo relacional que habíamos implementado. Eso supondrá ",{"type":21,"tag":92,"props":311,"children":312},{},[313],{"type":27,"value":314},"cambios en el modelo de base de datos",{"type":27,"value":316},", una ",{"type":21,"tag":92,"props":318,"children":319},{},[320],{"type":27,"value":321},"migración",{"type":27,"value":323},", cambios en el ",{"type":21,"tag":92,"props":325,"children":326},{},[327],{"type":27,"value":328},"modelo de entidades",{"type":27,"value":330}," y habrá que buscar una forma de unificar la obtención de productos entre la base de datos y el proveedor.",{"type":21,"tag":88,"props":332,"children":333},{},[334],{"type":27,"value":335},"Ofrecer una forma sencilla para que el equipo de operaciones pueda añadir y editar productos sin supervision supondrá la creación de un back-office y la formación de los mismos en esta nueva herramienta.",{"type":21,"tag":29,"props":337,"children":338},{},[339],{"type":27,"value":340},"Si comparamos el coste de implementar esta iteración con el coste de la primera implementación, se plantea un coste mucho mas alto.",{"type":21,"tag":29,"props":342,"children":343},{},[344],{"type":27,"value":345},"¿Pero cómo es posible, qué hemos hecho mal?",{"type":21,"tag":347,"props":348,"children":350},"h2",{"id":349},"el-problema-de-las-decisiones-por-inercia",[351],{"type":27,"value":352},"El problema de las decisiones por inercia",{"type":21,"tag":29,"props":354,"children":355},{},[356],{"type":27,"value":357},"Todas las decisiones deben estar, en la medida de lo posible, argumentadas con datos.",{"type":21,"tag":29,"props":359,"children":360},{},[361],{"type":27,"value":362},"Una vez empezemos a obtener datos de cómo nuestros usuarios interactúan con el sistema todo el producto puede empezar a tomar decisiones basadas en datos, y eso incluye a la implementación. Puede parecer difícil porque tendemos a pensar cosas como que necesitamos obligatoriamente una base de datos para ponernos a programar, pero eso no es cierto.",{"type":21,"tag":29,"props":364,"children":365},{},[366],{"type":27,"value":367},"Cuanto más tiempo esperemos para tomar una decisión, mas datos tendremos que la puedan respaldar y más acertada será. Pero sobretodo hay que estar preparados para equivocarnos.",{"type":21,"tag":29,"props":369,"children":370},{},[371],{"type":27,"value":372},"En este caso vamos a ejemplificarlo con la elección de la base de datos, pero esta situación puede ocurrir con cualquier aspecto tecnológico, desde el sistema de colas, hasta si es mejor usar lambdas o un servidor alojado en AWS.",{"type":21,"tag":29,"props":374,"children":375},{},[376],{"type":27,"value":377},"Sin darnos cuenta al principio de la implementación decidimos usar una BBDD relacional y el framework de JPA, además parecía una buena opción porque es lo que ya estaban usando dentro de la aplicación. Esto unido a que hemos acoplado las entidades de Kotlin a el modelo de BBDD hace que evolucionarlo sea muy costoso.",{"type":21,"tag":29,"props":379,"children":380},{},[381],{"type":27,"value":382},"Vamos a volver a hacer la implementación pero ahora sin base de datos:",{"type":21,"tag":22,"props":384,"children":386},{"id":385},"construyendo-un-mvp-sin-bbdd-1",[387],{"type":27,"value":8},{"type":21,"tag":29,"props":389,"children":390},{},[391],{"type":27,"value":392},"Partimos de los mismos requisitos que antes.",{"type":21,"tag":144,"props":394,"children":395},{},[396,400,404,408],{"type":21,"tag":88,"props":397,"children":398},{},[399],{"type":27,"value":151},{"type":21,"tag":88,"props":401,"children":402},{},[403],{"type":27,"value":156},{"type":21,"tag":88,"props":405,"children":406},{},[407],{"type":27,"value":161},{"type":21,"tag":88,"props":409,"children":410},{},[411],{"type":27,"value":166},{"type":21,"tag":29,"props":413,"children":414},{},[415],{"type":27,"value":416},"Definimos nuestras entidades:",{"type":21,"tag":29,"props":418,"children":419},{},[420],{"type":27,"value":421},"Cart",{"type":21,"tag":84,"props":423,"children":424},{},[425,430,435],{"type":21,"tag":88,"props":426,"children":427},{},[428],{"type":27,"value":429},"Id",{"type":21,"tag":88,"props":431,"children":432},{},[433],{"type":27,"value":434},"Lista de productos",{"type":21,"tag":88,"props":436,"children":437},{},[438],{"type":27,"value":439},"Pagado o no pagado",{"type":21,"tag":29,"props":441,"children":442},{},[443],{"type":27,"value":444},"Product",{"type":21,"tag":84,"props":446,"children":447},{},[448,452,457],{"type":21,"tag":88,"props":449,"children":450},{},[451],{"type":27,"value":429},{"type":21,"tag":88,"props":453,"children":454},{},[455],{"type":27,"value":456},"Nombre",{"type":21,"tag":88,"props":458,"children":459},{},[460],{"type":27,"value":461},"Precio",{"type":21,"tag":29,"props":463,"children":464},{},[465],{"type":27,"value":466},"A cada clase le voy a añadir una función que las convertirá en un objeto sencillo con el que devolverlo en las llamadas.",{"type":21,"tag":468,"props":469,"children":473},"pre",{"className":470,"code":472,"language":13,"meta":7},[471],"language-kotlin","class Cart(id: CartId) : Entity\u003CCartId>(id) {\n\n    private var isPaid = false\n\n    private val products = mutableListOf\u003CProduct>()\n\n    fun payCart() {\n        isPaid = true\n    }\n\n    fun addProduct(product: Product) {\n        products.add(product)\n    }\n\n    private fun getTotalPrice(): Double {\n        require(products.isNotEmpty()) { return 0.0 }\n        return products.map { it.price }.reduce { acc, product -> acc + product }\n    }\n\n    fun toData(): CartData {\n\n        return CartData(id.toString(), products, isPaid, getTotalPrice())\n    }\n\n    data class CartData(val id: String, val products: List\u003CProduct>, val isPaid: Boolean, val price: Double)\n}\n",[474],{"type":21,"tag":475,"props":476,"children":477},"code",{"__ignoreMap":7},[478],{"type":27,"value":472},{"type":21,"tag":468,"props":480,"children":483},{"className":481,"code":482,"language":13,"meta":7},[471],"class Product(id: ProductId, val price: Double, val name: String) : Entity\u003CProductId>(id) {\n\n    fun toData(): ProductData {\n        return ProductData(id.toString(),price,name)\n    }\n\n    data class ProductData(val id: String, val price: Double, val name: String)\n}\n",[484],{"type":21,"tag":475,"props":485,"children":486},{"__ignoreMap":7},[487],{"type":27,"value":482},{"type":21,"tag":29,"props":489,"children":490},{},[491],{"type":27,"value":492},"Ahora llega el momento de los casos de uso:",{"type":21,"tag":468,"props":494,"children":497},{"className":495,"code":496,"language":13,"meta":7},[471],"@GetMapping(\"/products\")\nfun getProducts(): List\u003CProduct.ProductData>? {\n    return productRepository.findAll()?.map{ it.toData()}\n}\n",[498],{"type":21,"tag":475,"props":499,"children":500},{"__ignoreMap":7},[501],{"type":27,"value":496},{"type":21,"tag":468,"props":503,"children":506},{"className":504,"code":505,"language":13,"meta":7},[471],"@PostMapping(\"/carts\")\nfun createCart(): String {\n    val id = CartId()\n    cartRepository.save(Cart(id))\n    return id.toString()\n}\n",[507],{"type":21,"tag":475,"props":508,"children":509},{"__ignoreMap":7},[510],{"type":27,"value":505},{"type":21,"tag":468,"props":512,"children":515},{"className":513,"code":514,"language":13,"meta":7},[471],"@GetMapping(\"/carts/{id}\")\nfun findCart(@PathVariable id: String): Cart.CartData? {\n    return cartRepository.find(CartId(id))?.toData()\n}\n",[516],{"type":21,"tag":475,"props":517,"children":518},{"__ignoreMap":7},[519],{"type":27,"value":514},{"type":21,"tag":468,"props":521,"children":524},{"className":522,"code":523,"language":13,"meta":7},[471],"@PutMapping(\"/carts/{id}\")\nfun addProductsToCart(@RequestBody products: List\u003CString>, @PathVariable id: String){\n    val cart = cartRepository.find(CartId(id))\nrequire(cart!=null)\nrequire(products.all{productRepository.find(ProductId(it)) != null})\n    products.forEach{cart.addProduct(productRepository.find(ProductId(it))!!)}\ncartRepository.save(cart)\n}\n",[525],{"type":21,"tag":475,"props":526,"children":527},{"__ignoreMap":7},[528],{"type":27,"value":523},{"type":21,"tag":468,"props":530,"children":533},{"className":531,"code":532,"language":13,"meta":7},[471],"@PostMapping(\"/carts/{id}\")\nfun payCart(@PathVariable id: String){\n    val cart = cartRepository.find(CartId(id))\nrequire(cart!=null)\n    cart.payCart()\n}\n",[534],{"type":21,"tag":475,"props":535,"children":536},{"__ignoreMap":7},[537],{"type":27,"value":532},{"type":21,"tag":347,"props":539,"children":541},{"id":540},"y-la-bbdd",[542],{"type":27,"value":543},"¿Y la BBDD?",{"type":21,"tag":29,"props":545,"children":546},{},[547],{"type":27,"value":548},"Cómo se ve en el código anterior estamos usando repositorios, pero ninguna BBDD. Para poder validar que todo esto funcione correctamente estamos usando repositorios en memoria.",{"type":21,"tag":468,"props":550,"children":553},{"className":551,"code":552,"language":13,"meta":7},[471],"abstract class InMemoryRepository\u003CE: Entity\u003CI>, I: Id> : Repository\u003CE, I> {\n\n    protected val database =mutableMapOf\u003CI,E>()\n\n    override fun find(id: I): E? {\n        return database[id]\n    }\n\n    override fun findAll(): List\u003CE>? {\n        return database.values.toList()\n    }\n\n    override fun save(data: E) {\n        database[data.id] = data\n    }\n\n    override fun delete(id: I) {\n        database.remove(id)\n    }\n\n    fun clear(){\n        database.clear()\n    }\n}\n",[554],{"type":21,"tag":475,"props":555,"children":556},{"__ignoreMap":7},[557],{"type":27,"value":552},{"type":21,"tag":29,"props":559,"children":560},{},[561,563,572],{"type":27,"value":562},"Todo este ejemplo esta preparado con algunas definiciones básicas como Entity, Id, y Repository. Pero estas no son necesarias, aunque en caso de que quieres usarlas en el ",{"type":21,"tag":564,"props":565,"children":569},"a",{"href":566,"rel":567},"https://github.com/SergioGH14/cart-mvp",[568],"nofollow",[570],{"type":27,"value":571},"código",{"type":27,"value":573}," tienes más detalle.",{"type":21,"tag":347,"props":575,"children":577},{"id":576},"y-ahora-qué",[578],{"type":27,"value":579},"¿Y ahora qué?",{"type":21,"tag":29,"props":581,"children":582},{},[583],{"type":27,"value":584},"Perfecto, ya tenemos nuestro MVP sin BBDD ¿y en qué nos beneficia esto?",{"type":21,"tag":29,"props":586,"children":587},{},[588],{"type":27,"value":589},"Todo dependerá del tipo de validación que vayamos a hacer ahora:",{"type":21,"tag":84,"props":591,"children":592},{},[593,598],{"type":21,"tag":88,"props":594,"children":595},{},[596],{"type":27,"value":597},"Si lo vamos a hacer una demo pequeña y para un grupo de usuarios reducido la solución que hemos presentado nos serviría",{"type":21,"tag":88,"props":599,"children":600},{},[601,603],{"type":27,"value":602},"Si queremos añadir persistencia tenemos todas las opciones disponibles, solo tenemos que implementar un repositorio para la que queramos evaluar.\n",{"type":21,"tag":84,"props":604,"children":605},{},[606,611,616,621],{"type":21,"tag":88,"props":607,"children":608},{},[609],{"type":27,"value":610},"InMemoryRepository",{"type":21,"tag":88,"props":612,"children":613},{},[614],{"type":27,"value":615},"MongoRepository",{"type":21,"tag":88,"props":617,"children":618},{},[619],{"type":27,"value":620},"PostgreSQLRepository",{"type":21,"tag":88,"props":622,"children":623},{},[624],{"type":27,"value":625},"GoogleSheetsRepository",{"type":21,"tag":29,"props":627,"children":628},{},[629],{"type":27,"value":630},"Pero analicemos que hemos conseguido realmente:",{"type":21,"tag":84,"props":632,"children":633},{},[634,639,644,649,654],{"type":21,"tag":88,"props":635,"children":636},{},[637],{"type":27,"value":638},"Más velocidad: Sin configurar absolutamente nada de BBDD podemos empezar a validar nuestro MVP",{"type":21,"tag":88,"props":640,"children":641},{},[642],{"type":27,"value":643},"Menos acoplamiento: Ahora el código no depende de ninguna tecnología en concreto, dentro de cada repository podemos usar la tecnología que queramos.",{"type":21,"tag":88,"props":645,"children":646},{},[647],{"type":27,"value":648},"Mejorar los tests: Teniendo los repositorios en memoria ya no se tiene que mockear los repositorios, ni levantar la aplicación para hacer pruebas sencillas",{"type":21,"tag":88,"props":650,"children":651},{},[652],{"type":27,"value":653},"Repositorios multi-repo: Uno de los problemas que surgían al intentar evolucionar el MVP era una entidad te podia llegar desde BBDD o desde una API. Ahora podemos implementar un repo que se inyecte esos dos repositorios sin que nada de la implementación cambie.",{"type":21,"tag":88,"props":655,"children":656},{},[657],{"type":27,"value":658},"Cambios progresivos de modelo: Al no tener la BBDD directamente mapeada en el código podemos ir aplicando los cambios de modelo de forma progresiva.",{"type":21,"tag":347,"props":660,"children":662},{"id":661},"evolucionando-el-nuevo-mvp",[663],{"type":27,"value":664},"Evolucionando el nuevo MVP",{"type":21,"tag":29,"props":666,"children":667},{},[668],{"type":27,"value":669},"No podíamos acabar sin analizar cómo afectarían los cambios anteriores a nuestro nuevo MVP.",{"type":21,"tag":84,"props":671,"children":672},{},[673,689],{"type":21,"tag":88,"props":674,"children":675},{},[676,681],{"type":21,"tag":92,"props":677,"children":678},{},[679],{"type":27,"value":680},"Mostrar productos de un tercero",{"type":21,"tag":84,"props":682,"children":683},{},[684],{"type":21,"tag":88,"props":685,"children":686},{},[687],{"type":27,"value":688},"Cómo hemos visto anteriormente podríamos implementar un multi-repo en el que implementar la lógica de las dos formas de acceder a los productos sin afectar a la estabilidad del sistema.",{"type":21,"tag":88,"props":690,"children":691},{},[692,697],{"type":21,"tag":92,"props":693,"children":694},{},[695],{"type":27,"value":696},"Ofrecer una solución para que operaciones pueda añadir nuevos productos",{"type":21,"tag":84,"props":698,"children":699},{},[700],{"type":21,"tag":88,"props":701,"children":702},{},[703],{"type":27,"value":704},"En este caso una solución podría ser crear de forma temporal los registros de los productos en un google sheets. Seria una forma rápida y barata de obtener la información y validar el MVP. Y de nuevo seria implementar un repositorio.",{"type":21,"tag":22,"props":706,"children":708},{"id":707},"conclusiones",[709],{"type":27,"value":710},"Conclusiones",{"type":21,"tag":29,"props":712,"children":713},{},[714],{"type":27,"value":715},"Lo primero de todo me gustaría matizar que no significa que siempre que se construya un MVP debería estar prohibido añadirle una base de datos. En este ejercicio intento demostrar que para construir un primer MVP se necesita muy poco y qué constantemente abusamos de frameworks y tecnologías que consideramos erróneamente esenciales.",{"type":21,"tag":29,"props":717,"children":718},{},[719],{"type":27,"value":720},"Por otro lado recalcar la importancia de la independencia de las diferentes capas de la aplicación. Gran parte de los problemas que surgieron con el ejemplo de JPA se deben a usar las entidades del propio framework como entidades de dominio algo que condiciona todo el modelo de dominio al modelo de base de datos, algo que tal y como vimos dificulta su evolución",{"type":21,"tag":29,"props":722,"children":723},{},[724],{"type":27,"value":725},"Por tanto y resumiendo; no hacen falta frameworks gigantes para invertir menos tiempo programando y mantener la independencia del código respecto a las tecnologías que usemos nos dará más opciones a la hora de evolucionar el producto que estemos desarrollando.",{"type":21,"tag":29,"props":727,"children":728},{},[729,731,737],{"type":27,"value":730},"Muchas gracias por leerme, ",{"type":21,"tag":564,"props":732,"children":734},{"href":566,"rel":733},[568],[735],{"type":27,"value":736},"aquí",{"type":27,"value":738}," te dejo todo el código que aparece en el artículo.",{"title":7,"searchDepth":740,"depth":740,"links":741},2,[742,744,745,746,747,748,749,750,751],{"id":175,"depth":743,"text":178},3,{"id":194,"depth":743,"text":197},{"id":218,"depth":743,"text":221},{"id":262,"depth":743,"text":265},{"id":281,"depth":743,"text":284},{"id":349,"depth":740,"text":352},{"id":540,"depth":740,"text":543},{"id":576,"depth":740,"text":579},{"id":661,"depth":740,"text":664},"markdown","content:blog:mvp-without-db.md","content","blog/mvp-without-db.md","blog/mvp-without-db","md",{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"author":10,"date":11,"tags":759,"excerpt":760,"body":782,"_type":752,"_id":753,"_source":754,"_file":755,"_stem":756,"_extension":757},[13,14,15,16],{"type":18,"children":761},[762,766,774,778],{"type":21,"tag":22,"props":763,"children":764},{"id":24},[765],{"type":27,"value":8},{"type":21,"tag":29,"props":767,"children":768},{},[769,770],{"type":27,"value":33},{"type":21,"tag":35,"props":771,"children":772},{},[773],{"type":27,"value":39},{"type":21,"tag":29,"props":775,"children":776},{},[777],{"type":27,"value":44},{"type":21,"tag":29,"props":779,"children":780},{},[781],{"type":27,"value":49},{"type":18,"children":783,"toc":1332},[784,788,796,800,804,808,812,831,837,841,845,852,856,875,879,883,887,893,897,901,907,911,915,923,931,939,945,949,953,960,964,968,972,1003,1007,1011,1015,1019,1023,1027,1031,1035,1039,1043,1047,1066,1070,1074,1089,1093,1108,1112,1120,1128,1132,1140,1148,1156,1164,1172,1176,1180,1188,1198,1202,1206,1210,1240,1244,1267,1271,1275,1306,1310,1314,1318,1322],{"type":21,"tag":22,"props":785,"children":786},{"id":24},[787],{"type":27,"value":8},{"type":21,"tag":29,"props":789,"children":790},{},[791,792],{"type":27,"value":33},{"type":21,"tag":35,"props":793,"children":794},{},[795],{"type":27,"value":39},{"type":21,"tag":29,"props":797,"children":798},{},[799],{"type":27,"value":44},{"type":21,"tag":29,"props":801,"children":802},{},[803],{"type":27,"value":49},{"type":21,"tag":22,"props":805,"children":806},{"id":74},[807],{"type":27,"value":77},{"type":21,"tag":29,"props":809,"children":810},{},[811],{"type":27,"value":82},{"type":21,"tag":84,"props":813,"children":814},{},[815,823],{"type":21,"tag":88,"props":816,"children":817},{},[818,822],{"type":21,"tag":92,"props":819,"children":820},{},[821],{"type":27,"value":96},{"type":27,"value":98},{"type":21,"tag":88,"props":824,"children":825},{},[826,830],{"type":21,"tag":92,"props":827,"children":828},{},[829],{"type":27,"value":106},{"type":27,"value":108},{"type":21,"tag":29,"props":832,"children":833},{},[834],{"type":21,"tag":113,"props":835,"children":836},{"alt":115,"src":116},[],{"type":21,"tag":22,"props":838,"children":839},{"id":120},[840],{"type":27,"value":123},{"type":21,"tag":29,"props":842,"children":843},{},[844],{"type":27,"value":128},{"type":21,"tag":130,"props":846,"children":847},{},[848],{"type":21,"tag":29,"props":849,"children":850},{},[851],{"type":27,"value":137},{"type":21,"tag":29,"props":853,"children":854},{},[855],{"type":27,"value":142},{"type":21,"tag":144,"props":857,"children":858},{},[859,863,867,871],{"type":21,"tag":88,"props":860,"children":861},{},[862],{"type":27,"value":151},{"type":21,"tag":88,"props":864,"children":865},{},[866],{"type":27,"value":156},{"type":21,"tag":88,"props":868,"children":869},{},[870],{"type":27,"value":161},{"type":21,"tag":88,"props":872,"children":873},{},[874],{"type":27,"value":166},{"type":21,"tag":29,"props":876,"children":877},{},[878],{"type":27,"value":171},{"type":21,"tag":173,"props":880,"children":881},{"id":175},[882],{"type":27,"value":178},{"type":21,"tag":29,"props":884,"children":885},{},[886],{"type":27,"value":183},{"type":21,"tag":29,"props":888,"children":889},{},[890],{"type":21,"tag":113,"props":891,"children":892},{"alt":189,"src":190},[],{"type":21,"tag":173,"props":894,"children":895},{"id":194},[896],{"type":27,"value":197},{"type":21,"tag":29,"props":898,"children":899},{},[900],{"type":27,"value":202},{"type":21,"tag":29,"props":902,"children":903},{},[904],{"type":21,"tag":113,"props":905,"children":906},{"alt":208,"src":209},[],{"type":21,"tag":29,"props":908,"children":909},{},[910],{"type":27,"value":215},{"type":21,"tag":173,"props":912,"children":913},{"id":218},[914],{"type":27,"value":221},{"type":21,"tag":29,"props":916,"children":917},{},[918,922],{"type":21,"tag":92,"props":919,"children":920},{},[921],{"type":27,"value":229},{"type":27,"value":231},{"type":21,"tag":29,"props":924,"children":925},{},[926,930],{"type":21,"tag":92,"props":927,"children":928},{},[929],{"type":27,"value":239},{"type":27,"value":241},{"type":21,"tag":29,"props":932,"children":933},{},[934,938],{"type":21,"tag":92,"props":935,"children":936},{},[937],{"type":27,"value":249},{"type":27,"value":251},{"type":21,"tag":29,"props":940,"children":941},{},[942],{"type":21,"tag":113,"props":943,"children":944},{"alt":257,"src":258},[],{"type":21,"tag":173,"props":946,"children":947},{"id":262},[948],{"type":27,"value":265},{"type":21,"tag":29,"props":950,"children":951},{},[952],{"type":27,"value":270},{"type":21,"tag":130,"props":954,"children":955},{},[956],{"type":21,"tag":29,"props":957,"children":958},{},[959],{"type":27,"value":278},{"type":21,"tag":173,"props":961,"children":962},{"id":281},[963],{"type":27,"value":284},{"type":21,"tag":29,"props":965,"children":966},{},[967],{"type":27,"value":289},{"type":21,"tag":29,"props":969,"children":970},{},[971],{"type":27,"value":294},{"type":21,"tag":84,"props":973,"children":974},{},[975,999],{"type":21,"tag":88,"props":976,"children":977},{},[978,979,983,984,988,989,993,994,998],{"type":27,"value":302},{"type":21,"tag":92,"props":980,"children":981},{},[982],{"type":27,"value":307},{"type":27,"value":309},{"type":21,"tag":92,"props":985,"children":986},{},[987],{"type":27,"value":314},{"type":27,"value":316},{"type":21,"tag":92,"props":990,"children":991},{},[992],{"type":27,"value":321},{"type":27,"value":323},{"type":21,"tag":92,"props":995,"children":996},{},[997],{"type":27,"value":328},{"type":27,"value":330},{"type":21,"tag":88,"props":1000,"children":1001},{},[1002],{"type":27,"value":335},{"type":21,"tag":29,"props":1004,"children":1005},{},[1006],{"type":27,"value":340},{"type":21,"tag":29,"props":1008,"children":1009},{},[1010],{"type":27,"value":345},{"type":21,"tag":347,"props":1012,"children":1013},{"id":349},[1014],{"type":27,"value":352},{"type":21,"tag":29,"props":1016,"children":1017},{},[1018],{"type":27,"value":357},{"type":21,"tag":29,"props":1020,"children":1021},{},[1022],{"type":27,"value":362},{"type":21,"tag":29,"props":1024,"children":1025},{},[1026],{"type":27,"value":367},{"type":21,"tag":29,"props":1028,"children":1029},{},[1030],{"type":27,"value":372},{"type":21,"tag":29,"props":1032,"children":1033},{},[1034],{"type":27,"value":377},{"type":21,"tag":29,"props":1036,"children":1037},{},[1038],{"type":27,"value":382},{"type":21,"tag":22,"props":1040,"children":1041},{"id":385},[1042],{"type":27,"value":8},{"type":21,"tag":29,"props":1044,"children":1045},{},[1046],{"type":27,"value":392},{"type":21,"tag":144,"props":1048,"children":1049},{},[1050,1054,1058,1062],{"type":21,"tag":88,"props":1051,"children":1052},{},[1053],{"type":27,"value":151},{"type":21,"tag":88,"props":1055,"children":1056},{},[1057],{"type":27,"value":156},{"type":21,"tag":88,"props":1059,"children":1060},{},[1061],{"type":27,"value":161},{"type":21,"tag":88,"props":1063,"children":1064},{},[1065],{"type":27,"value":166},{"type":21,"tag":29,"props":1067,"children":1068},{},[1069],{"type":27,"value":416},{"type":21,"tag":29,"props":1071,"children":1072},{},[1073],{"type":27,"value":421},{"type":21,"tag":84,"props":1075,"children":1076},{},[1077,1081,1085],{"type":21,"tag":88,"props":1078,"children":1079},{},[1080],{"type":27,"value":429},{"type":21,"tag":88,"props":1082,"children":1083},{},[1084],{"type":27,"value":434},{"type":21,"tag":88,"props":1086,"children":1087},{},[1088],{"type":27,"value":439},{"type":21,"tag":29,"props":1090,"children":1091},{},[1092],{"type":27,"value":444},{"type":21,"tag":84,"props":1094,"children":1095},{},[1096,1100,1104],{"type":21,"tag":88,"props":1097,"children":1098},{},[1099],{"type":27,"value":429},{"type":21,"tag":88,"props":1101,"children":1102},{},[1103],{"type":27,"value":456},{"type":21,"tag":88,"props":1105,"children":1106},{},[1107],{"type":27,"value":461},{"type":21,"tag":29,"props":1109,"children":1110},{},[1111],{"type":27,"value":466},{"type":21,"tag":468,"props":1113,"children":1115},{"className":1114,"code":472,"language":13,"meta":7},[471],[1116],{"type":21,"tag":475,"props":1117,"children":1118},{"__ignoreMap":7},[1119],{"type":27,"value":472},{"type":21,"tag":468,"props":1121,"children":1123},{"className":1122,"code":482,"language":13,"meta":7},[471],[1124],{"type":21,"tag":475,"props":1125,"children":1126},{"__ignoreMap":7},[1127],{"type":27,"value":482},{"type":21,"tag":29,"props":1129,"children":1130},{},[1131],{"type":27,"value":492},{"type":21,"tag":468,"props":1133,"children":1135},{"className":1134,"code":496,"language":13,"meta":7},[471],[1136],{"type":21,"tag":475,"props":1137,"children":1138},{"__ignoreMap":7},[1139],{"type":27,"value":496},{"type":21,"tag":468,"props":1141,"children":1143},{"className":1142,"code":505,"language":13,"meta":7},[471],[1144],{"type":21,"tag":475,"props":1145,"children":1146},{"__ignoreMap":7},[1147],{"type":27,"value":505},{"type":21,"tag":468,"props":1149,"children":1151},{"className":1150,"code":514,"language":13,"meta":7},[471],[1152],{"type":21,"tag":475,"props":1153,"children":1154},{"__ignoreMap":7},[1155],{"type":27,"value":514},{"type":21,"tag":468,"props":1157,"children":1159},{"className":1158,"code":523,"language":13,"meta":7},[471],[1160],{"type":21,"tag":475,"props":1161,"children":1162},{"__ignoreMap":7},[1163],{"type":27,"value":523},{"type":21,"tag":468,"props":1165,"children":1167},{"className":1166,"code":532,"language":13,"meta":7},[471],[1168],{"type":21,"tag":475,"props":1169,"children":1170},{"__ignoreMap":7},[1171],{"type":27,"value":532},{"type":21,"tag":347,"props":1173,"children":1174},{"id":540},[1175],{"type":27,"value":543},{"type":21,"tag":29,"props":1177,"children":1178},{},[1179],{"type":27,"value":548},{"type":21,"tag":468,"props":1181,"children":1183},{"className":1182,"code":552,"language":13,"meta":7},[471],[1184],{"type":21,"tag":475,"props":1185,"children":1186},{"__ignoreMap":7},[1187],{"type":27,"value":552},{"type":21,"tag":29,"props":1189,"children":1190},{},[1191,1192,1197],{"type":27,"value":562},{"type":21,"tag":564,"props":1193,"children":1195},{"href":566,"rel":1194},[568],[1196],{"type":27,"value":571},{"type":27,"value":573},{"type":21,"tag":347,"props":1199,"children":1200},{"id":576},[1201],{"type":27,"value":579},{"type":21,"tag":29,"props":1203,"children":1204},{},[1205],{"type":27,"value":584},{"type":21,"tag":29,"props":1207,"children":1208},{},[1209],{"type":27,"value":589},{"type":21,"tag":84,"props":1211,"children":1212},{},[1213,1217],{"type":21,"tag":88,"props":1214,"children":1215},{},[1216],{"type":27,"value":597},{"type":21,"tag":88,"props":1218,"children":1219},{},[1220,1221],{"type":27,"value":602},{"type":21,"tag":84,"props":1222,"children":1223},{},[1224,1228,1232,1236],{"type":21,"tag":88,"props":1225,"children":1226},{},[1227],{"type":27,"value":610},{"type":21,"tag":88,"props":1229,"children":1230},{},[1231],{"type":27,"value":615},{"type":21,"tag":88,"props":1233,"children":1234},{},[1235],{"type":27,"value":620},{"type":21,"tag":88,"props":1237,"children":1238},{},[1239],{"type":27,"value":625},{"type":21,"tag":29,"props":1241,"children":1242},{},[1243],{"type":27,"value":630},{"type":21,"tag":84,"props":1245,"children":1246},{},[1247,1251,1255,1259,1263],{"type":21,"tag":88,"props":1248,"children":1249},{},[1250],{"type":27,"value":638},{"type":21,"tag":88,"props":1252,"children":1253},{},[1254],{"type":27,"value":643},{"type":21,"tag":88,"props":1256,"children":1257},{},[1258],{"type":27,"value":648},{"type":21,"tag":88,"props":1260,"children":1261},{},[1262],{"type":27,"value":653},{"type":21,"tag":88,"props":1264,"children":1265},{},[1266],{"type":27,"value":658},{"type":21,"tag":347,"props":1268,"children":1269},{"id":661},[1270],{"type":27,"value":664},{"type":21,"tag":29,"props":1272,"children":1273},{},[1274],{"type":27,"value":669},{"type":21,"tag":84,"props":1276,"children":1277},{},[1278,1292],{"type":21,"tag":88,"props":1279,"children":1280},{},[1281,1285],{"type":21,"tag":92,"props":1282,"children":1283},{},[1284],{"type":27,"value":680},{"type":21,"tag":84,"props":1286,"children":1287},{},[1288],{"type":21,"tag":88,"props":1289,"children":1290},{},[1291],{"type":27,"value":688},{"type":21,"tag":88,"props":1293,"children":1294},{},[1295,1299],{"type":21,"tag":92,"props":1296,"children":1297},{},[1298],{"type":27,"value":696},{"type":21,"tag":84,"props":1300,"children":1301},{},[1302],{"type":21,"tag":88,"props":1303,"children":1304},{},[1305],{"type":27,"value":704},{"type":21,"tag":22,"props":1307,"children":1308},{"id":707},[1309],{"type":27,"value":710},{"type":21,"tag":29,"props":1311,"children":1312},{},[1313],{"type":27,"value":715},{"type":21,"tag":29,"props":1315,"children":1316},{},[1317],{"type":27,"value":720},{"type":21,"tag":29,"props":1319,"children":1320},{},[1321],{"type":27,"value":725},{"type":21,"tag":29,"props":1323,"children":1324},{},[1325,1326,1331],{"type":27,"value":730},{"type":21,"tag":564,"props":1327,"children":1329},{"href":566,"rel":1328},[568],[1330],{"type":27,"value":736},{"type":27,"value":738},{"title":7,"searchDepth":740,"depth":740,"links":1333},[1334,1335,1336,1337,1338,1339,1340,1341,1342],{"id":175,"depth":743,"text":178},{"id":194,"depth":743,"text":197},{"id":218,"depth":743,"text":221},{"id":262,"depth":743,"text":265},{"id":281,"depth":743,"text":284},{"id":349,"depth":740,"text":352},{"id":540,"depth":740,"text":543},{"id":576,"depth":740,"text":579},{"id":661,"depth":740,"text":664},1737483855965]